{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('#start-btn');\nconst datePicker = document.querySelector('#datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet selectedDate = null;\nlet timerId = null;\n\nflatpickr(datePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const now = new Date();\n    if (selectedDates[0] <= now) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n      selectedDate = null;\n    } else {\n      selectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  if (!selectedDate) return;\n\n  startBtn.disabled = true;\n  datePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const diff = selectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      iziToast.success({\n        message: 'Timer finished!',\n        position: 'topRight',\n      });\n      datePicker.disabled = false;\n      return;\n    }\n\n    updateTimer(diff);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = 60 * second;\n  const hour = 60 * minute;\n  const day = 24 * hour;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["startBtn","datePicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","selectedDate","timerId","flatpickr","selectedDates","now","iziToast","diff","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2GAMA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAe,KACfC,EAAU,KAEdC,EAAUP,EAAY,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrB,MAAMC,EAAM,IAAI,KACZD,EAAc,CAAC,GAAKC,GACtBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,GACpBM,EAAe,OAEfA,EAAeG,EAAc,CAAC,EAC9BT,EAAS,SAAW,GAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAW,SAAW,GAEtBM,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAON,EADD,IAAI,KAGhB,GAAIM,GAAQ,EAAG,CACb,cAAcL,CAAO,EACrBM,EAAY,CAAC,EACbF,EAAS,QAAQ,CACf,QAAS,kBACT,SAAU,UAClB,CAAO,EACDV,EAAW,SAAW,GACtB,MACD,CAEDY,EAAYD,CAAI,CACjB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDZ,EAAS,YAAckB,EAAeL,CAAI,EAC1CZ,EAAU,YAAciB,EAAeJ,CAAK,EAC5CZ,EAAY,YAAcgB,EAAeH,CAAO,EAChDZ,EAAY,YAAce,EAAeF,CAAO,CAClD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}